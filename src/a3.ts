//O(1) (константное время), не зависит от размера вхлдных данных (arr[array.length -1])
//O(log n) (логарифмическое время), время растет логарифмически в завистимости от размера данных(бинарный поиск в отсортированном массиве)
//O(n) (линейное время), время прямо пропорционально размеру входных данных (линейный поиск по массиву или суммирование всех i эл)
//O(n^2) (квадратичное время), пузырьковая сортировка
//O(2^n) (экспоненциальное время)

//Вставка
//ArrayList: O(n) - линейная 
//LinkedList: O(n) - линейная (кроме слкучаев вставки в начало или конец списка)
//HashSet: O(1) - константная (скорость алгоритма не завист от размера данных)
//TreeSet: O(log n) - логарифмическая

//Получение
//ArrayList: O(n) - линейная 
//LinkedList: O(n) - линейная 
//HashSet: O(1) - константная 
//TreeSet: O(log n) - логарифмическая

//удаление
//ArrayList: O(n) - линейная 
//LinkedList: O(n) - линейная 
//HashSet: O(1) - константная 
//TreeSet: O(log n) - логарифмическая

//contains
//ArrayList: O(n) - линейная 
//LinkedList: O(n) - линейная 
//HashSet: O(1) - константная 
//TreeSet: O(log n) - логарифмическая

//вставка
//ArrayList: O(n) - линейная или константная
//LinkedList: O(n) - линейная 
//HashSet: O(1) - константная 
//TreeSet: O(log n) - логарифмическая